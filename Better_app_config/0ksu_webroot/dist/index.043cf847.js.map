{"mappings":"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","sources":["<anon>","src/html.js","node_modules/kernelsu/index.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequiree95e\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequiree95e\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"7qALL\", function(module, exports) {\n// 导入kernelsu的webui库\n\nvar $5tSLu = parcelRequire(\"5tSLu\");\n// 浏览器打印一个日志\nconsole.log(\"Loader Webui\");\n// 让app在android设备屏幕上弹出一个toast\n(0, $5tSLu.toast)(\"WebUI\\u5DF2\\u52A0\\u8F7D\");\n// 让webui关闭网页全屏模式\n(0, $5tSLu.fullScreen)(false);\n// 封装异步函数，用于执行命令并返回输出\nasync function executeCommand(command, cwd) {\n    try {\n        // 执行命令并获取输出\n        const { errno, stdout, stderr } = await (0, $5tSLu.exec)(command, {\n            cwd: cwd\n        });\n        // 判断是否成功执行\n        if (errno === 0) // 成功时返回标准输出\n        return stdout;\n        else // 失败时抛出错误，包含标准错误输出\n        throw new Error(`\\u{547D}\\u{4EE4}\\u{6267}\\u{884C}\\u{5931}\\u{8D25}: \n${stderr}`);\n    } catch (error) {\n        // 捕获执行过程中的任何错误，并返回错误信息\n        return `\\u{9519}\\u{8BEF}: \n${error.message}`;\n    }\n}\n// 获取#app容器\nconst appContainer = document.getElementById(\"app\");\n// 确保appContainer已找到，否则后续操作会导致错误\nif (!appContainer) {\n    console.error(\"\\u672A\\u627E\\u5230#app\\u5BB9\\u5668\");\n    return;\n}\n// 创建标题元素\nconst title = document.createElement(\"h5\");\ntitle.textContent = \"Module Webui\";\n// 创建命令行控制卡片\nconst serverStatusCard = document.createElement(\"div\");\nserverStatusCard.classList.add(\"card\");\nconst serverStatusHeader = document.createElement(\"div\");\nserverStatusHeader.classList.add(\"card-header\");\nserverStatusHeader.textContent = \"\\u63A7\\u5236\\u533A\";\nconst serverStatusBody = document.createElement(\"div\");\nserverStatusBody.classList.add(\"card-body\");\n// 创建按钮容器并应用样式\nconst buttonsContainer = document.createElement(\"div\");\nbuttonsContainer.classList.add(\"button-container\");\n// 创建按钮并添加到buttonsContainer\nconst buttons = [\n    \"\\u4E00\\u952E\\u91CD\\u65B0\\u914D\\u7F6E\",\n    \"\\u914D\\u7F6E \\u9690\\u85CF\\u5E94\\u7528\\u5217\\u8868 APP\",\n    \"\\u9690\\u85CF\\u5E94\\u7528\\u5217\\u8868\\u5207\\u6362\\u767D\\u540D\\u5355\\u6A21\\u5F0F\",\n    \"\\u9690\\u85CF\\u5E94\\u7528\\u5217\\u8868\\u5207\\u6362\\u9ED1\\u540D\\u5355\\u6A21\\u5F0F\",\n    \"\\u5173\\u95ED\\u9690\\u85CF\\u5E94\\u7528\\u5217\\u8868\\u81EA\\u52A8\\u91CD\\u8F7D\",\n    \"\\u5F00\\u542F\\u9690\\u85CF\\u5E94\\u7528\\u5217\\u8868\\u81EA\\u52A8\\u91CD\\u8F7D\",\n    \"\\u914D\\u7F6E Tricky-Store \\u6A21\\u5757\",\n    \"\\u66F4\\u65B0 boot hash(\\u5FC5\\u987B\\u4FDD\\u8BC1\\u6A21\\u5757\\u81EA\\u5E26\\u7684\\u5BC6\\u94A5\\u8BA4\\u8BC1APP\\u5DF2\\u5B89\\u88C5)\",\n    \"\\u5B89\\u88C5\\u6A21\\u5757\\u81EA\\u5E26\\u7684app\"\n].map((text)=>{\n    const button = document.createElement(\"button\");\n    button.textContent = text;\n    buttonsContainer.appendChild(button);\n    return button;\n});\n// 将按钮容器添加到serverStatusBody\nserverStatusBody.appendChild(buttonsContainer);\n// 添加提示\nconst buttonDescription = document.createElement(\"p\");\nbuttonDescription.classList.add(\"input-container\");\nbuttonDescription.textContent = \"\\u63D0\\u793A:\\u547D\\u4EE4\\u8F83\\u591A\\u65F6\\u53EF\\u80FD\\u4F1A\\u5361\\u4F4F\\u6216\\u8005\\u65E5\\u5FD7\\u672A\\u8F93\\u51FA,\\u8FD9\\u662F\\u6B63\\u5E38\\u73B0\\u8C61\";\n// 添加输入框和执行按钮的容器\nconst inputContainer = document.createElement(\"div\");\ninputContainer.classList.add(\"input-container\");\nconst inputDescription = document.createElement(\"p\");\ninputDescription.textContent = \"\\u81EA\\u5B9A\\u4E49shell\\u6267\\u884C\";\n// 创建输入框\nconst inputBox = document.createElement(\"input\");\ninputBox.type = \"text\";\ninputBox.placeholder = \"\\u5728\\u8FD9\\u91CC\\u53EF\\u4EE5\\u8F93\\u5165\\u81EA\\u5B9A\\u4E49sh\\u547D\\u4EE4\";\n// 创建执行按钮\nconst CustonExecuteButton = document.createElement(\"button\");\nCustonExecuteButton.textContent = \"\\u6267\\u884C\";\n// 将所有元素添加到inputContainer中\ninputContainer.appendChild(inputBox);\ninputContainer.appendChild(CustonExecuteButton);\n// 将所有元素添加到卡片中\nserverStatusBody.appendChild(buttonDescription); // 添加描述\nserverStatusBody.appendChild(document.createElement(\"br\")); // 添加换行\nserverStatusBody.appendChild(inputDescription); // 添加描述\nserverStatusBody.appendChild(inputContainer); // 添加输入框和执行按钮的容器\nserverStatusCard.appendChild(serverStatusHeader);\nserverStatusCard.appendChild(serverStatusBody);\n// 创建日志信息卡片（类似地）\nconst logCard = document.createElement(\"div\");\nlogCard.classList.add(\"card\");\nconst logHeader = document.createElement(\"div\");\nlogHeader.classList.add(\"card-header\");\nlogHeader.textContent = \"\\u65E5\\u5FD7\\u4FE1\\u606F\";\nconst logBody = document.createElement(\"div\");\n// 创建日志信息的列表项\nconst logEntry = document.createElement(\"pre\");\nlogEntry.classList.add(\"log-body\");\nlogEntry.textContent = \"\\u8FD8\\u6CA1\\u6709\\u547D\\u4EE4\\u6267\\u884C\\u5462\";\n// 创建一个ul元素并将列表项添加到其中\nconst logList = document.createElement(\"ul\");\nlogList.appendChild(logEntry);\n// 将所有元素添加到日志卡片中\nlogBody.appendChild(logList);\nlogCard.appendChild(logHeader);\nlogCard.appendChild(logBody);\n// 设置默认的工作路径\nconst MODDIR = \"/data/adb/modules/better_app_config\";\n// 为按钮添加点击事件监听器\nbuttons.forEach((button, index)=>{\n    button.addEventListener(\"click\", ()=>{\n        // 先给个提醒,防止多次点击\n        logEntry.textContent = \"\\u6267\\u884C\\u4E2D\";\n        // 使用 setTimeout 来确保 UI 有机会更新\n        setTimeout(async ()=>{\n            // 定义要执行的命令和目录(尽量使用完整路径减少错误)\n            const commands = [\n                \"sh \" + MODDIR + \"/action.sh\",\n                \"sh \" + MODDIR + \"/Hide_My_Applist/get_config.sh\",\n                \"rm -f \" + MODDIR + \"/Hide_My_Applist/whitelist.mode;sh \" + MODDIR + \"/Hide_My_Applist/get_config.sh\",\n                \"touch \" + MODDIR + \"/Hide_My_Applist/whitelist.mode;sh \" + MODDIR + \"/Hide_My_Applist/get_config.sh\",\n                \"rm -f \" + MODDIR + \"/Hide_My_Applist/reload\",\n                \"touch \" + MODDIR + \"/Hide_My_Applist/reload\",\n                \"sh \" + MODDIR + \"/Tricky_Store/get_config.sh\",\n                \"rm -f gethash.done;sh \" + MODDIR + \"/getboothash.sh\",\n                \"sh \" + MODDIR + \"/apks/install.sh\"\n            ];\n            const cwd = MODDIR;\n            // 调用封装好的异步函数执行命令\n            try {\n                const result = await executeCommand(commands[index], cwd);\n                // 将命令执行的结果直接设置到 <pre> 元素中\n                logEntry.textContent = result;\n                // 滚动日志区域到最新内容（如果日志区域有滚动条的话）\n                logBody.scrollTop = logBody.scrollHeight;\n            } catch (error) {\n                console.error(\"\\u6267\\u884C\\u547D\\u4EE4\\u65F6\\u53D1\\u751F\\u9519\\u8BEF:\", error);\n                // 可以选择将错误信息设置到 <pre> 元素中\n                logEntry.textContent = \"\\u6267\\u884C\\u547D\\u4EE4\\u65F6\\u53D1\\u751F\\u9519\\u8BEF: \" + error.message;\n            }\n        }, 100); // 延迟毫秒，即尽可能快地执行，但仍然允许UI更新\n    });\n});\nCustonExecuteButton.addEventListener(\"click\", async ()=>{\n    // 定义要执行的命令和目录\n    const command = inputBox.value;\n    const cwd = MODDIR;\n    // 调用封装好的异步函数执行命令\n    const result = await executeCommand(command, cwd);\n    // 将命令执行的结果直接设置到 <pre> 元素中\n    logEntry.textContent = result;\n    // 滚动日志区域到最新内容（如果日志区域有滚动条的话）\n    logBody.scrollTop = logBody.scrollHeight;\n});\n// 最后，将卡片和标题添加到#app容器中\nappContainer.appendChild(title);\nappContainer.appendChild(serverStatusCard);\nappContainer.appendChild(logCard);\n\n});\nparcelRegister(\"5tSLu\", function(module, exports) {\n\n$parcel$export(module.exports, \"exec\", () => $3fda245dd9a38f2c$export$78e3044358792147);\n$parcel$export(module.exports, \"fullScreen\", () => $3fda245dd9a38f2c$export$708e76f13b8a286c);\n$parcel$export(module.exports, \"toast\", () => $3fda245dd9a38f2c$export$b410431fab84fa58);\nlet $3fda245dd9a38f2c$var$callbackCounter = 0;\nfunction $3fda245dd9a38f2c$var$getUniqueCallbackName(prefix) {\n    return `${prefix}_callback_${Date.now()}_${$3fda245dd9a38f2c$var$callbackCounter++}`;\n}\nfunction $3fda245dd9a38f2c$export$78e3044358792147(command, options) {\n    if (typeof options === \"undefined\") options = {};\n    return new Promise((resolve, reject)=>{\n        // Generate a unique callback function name\n        const callbackFuncName = $3fda245dd9a38f2c$var$getUniqueCallbackName(\"exec\");\n        // Define the success callback function\n        window[callbackFuncName] = (errno, stdout, stderr)=>{\n            resolve({\n                errno: errno,\n                stdout: stdout,\n                stderr: stderr\n            });\n            cleanup(callbackFuncName);\n        };\n        function cleanup(successName) {\n            delete window[successName];\n        }\n        try {\n            ksu.exec(command, JSON.stringify(options), callbackFuncName);\n        } catch (error) {\n            reject(error);\n            cleanup(callbackFuncName);\n        }\n    });\n}\nfunction $3fda245dd9a38f2c$var$Stdio() {\n    this.listeners = {};\n}\n$3fda245dd9a38f2c$var$Stdio.prototype.on = function(event, listener) {\n    if (!this.listeners[event]) this.listeners[event] = [];\n    this.listeners[event].push(listener);\n};\n$3fda245dd9a38f2c$var$Stdio.prototype.emit = function(event, ...args) {\n    if (this.listeners[event]) this.listeners[event].forEach((listener)=>listener(...args));\n};\nfunction $3fda245dd9a38f2c$var$ChildProcess() {\n    this.listeners = {};\n    this.stdin = new $3fda245dd9a38f2c$var$Stdio();\n    this.stdout = new $3fda245dd9a38f2c$var$Stdio();\n    this.stderr = new $3fda245dd9a38f2c$var$Stdio();\n}\n$3fda245dd9a38f2c$var$ChildProcess.prototype.on = function(event, listener) {\n    if (!this.listeners[event]) this.listeners[event] = [];\n    this.listeners[event].push(listener);\n};\n$3fda245dd9a38f2c$var$ChildProcess.prototype.emit = function(event, ...args) {\n    if (this.listeners[event]) this.listeners[event].forEach((listener)=>listener(...args));\n};\nfunction $3fda245dd9a38f2c$export$1713f5ac2bf0caf5(command, args, options) {\n    if (typeof args === \"undefined\") args = [];\n    else if (typeof args === \"object\") // allow for (command, options) signature\n    options = args;\n    if (typeof options === \"undefined\") options = {};\n    const child = new $3fda245dd9a38f2c$var$ChildProcess();\n    const childCallbackName = $3fda245dd9a38f2c$var$getUniqueCallbackName(\"spawn\");\n    window[childCallbackName] = child;\n    function cleanup(name) {\n        delete window[name];\n    }\n    child.on(\"exit\", (code)=>{\n        cleanup(childCallbackName);\n    });\n    try {\n        ksu.spawn(command, JSON.stringify(args), JSON.stringify(options), childCallbackName);\n    } catch (error) {\n        child.emit(\"error\", error);\n        cleanup(childCallbackName);\n    }\n    return child;\n}\nfunction $3fda245dd9a38f2c$export$708e76f13b8a286c(isFullScreen) {\n    ksu.fullScreen(isFullScreen);\n}\nfunction $3fda245dd9a38f2c$export$b410431fab84fa58(message) {\n    ksu.toast(message);\n}\n\n});\n\n\n\nparcelRequire(\"7qALL\");\n\n//# sourceMappingURL=index.043cf847.js.map\n","// 导入kernelsu的webui库\r\nimport { fullScreen, exec, toast } from 'kernelsu';\r\n\r\n// 浏览器打印一个日志\r\nconsole.log(\"Loader Webui\");\r\n// 让app在android设备屏幕上弹出一个toast\r\ntoast('WebUI已加载');\r\n// 让webui关闭网页全屏模式\r\nfullScreen(false);\r\n\r\n// 封装异步函数，用于执行命令并返回输出\r\nasync function executeCommand(command, cwd) {\r\n  try {\r\n    // 执行命令并获取输出\r\n    const { errno, stdout, stderr } = await exec(command, { cwd });\r\n    // 判断是否成功执行\r\n    if (errno === 0) {\r\n      // 成功时返回标准输出\r\n      return stdout;\r\n    } else {\r\n      // 失败时抛出错误，包含标准错误输出\r\n      throw new Error(`命令执行失败: \\n${stderr}`);\r\n    }\r\n  } catch (error) {\r\n    // 捕获执行过程中的任何错误，并返回错误信息\r\n    return `错误: \\n${error.message}`;\r\n  }\r\n}\r\n\r\n// 获取#app容器\r\nconst appContainer = document.getElementById('app');\r\n\r\n// 确保appContainer已找到，否则后续操作会导致错误\r\nif (!appContainer) {\r\n  console.error('未找到#app容器');\r\n  return;\r\n}\r\n\r\n// 创建标题元素\r\nconst title = document.createElement('h5');\r\ntitle.textContent = 'Module Webui';\r\n\r\n// 创建命令行控制卡片\r\nconst serverStatusCard = document.createElement('div');\r\nserverStatusCard.classList.add('card');\r\n\r\nconst serverStatusHeader = document.createElement('div');\r\nserverStatusHeader.classList.add('card-header');\r\nserverStatusHeader.textContent = '控制区';\r\n\r\nconst serverStatusBody = document.createElement('div');\r\nserverStatusBody.classList.add('card-body');\r\n\r\n// 创建按钮容器并应用样式\r\nconst buttonsContainer = document.createElement('div');\r\nbuttonsContainer.classList.add('button-container');\r\n\r\n// 创建按钮并添加到buttonsContainer\r\nconst buttons = ['一键重新配置', '配置 隐藏应用列表 APP', '隐藏应用列表切换白名单模式', '隐藏应用列表切换黑名单模式', '关闭隐藏应用列表自动重载', '开启隐藏应用列表自动重载', '配置 Tricky-Store 模块', '更新 boot hash(必须保证模块自带的密钥认证APP已安装)', '安装模块自带的app'].map(text => {\r\n  const button = document.createElement('button');\r\n  button.textContent = text;\r\n  buttonsContainer.appendChild(button);\r\n  return button;\r\n});\r\n\r\n// 将按钮容器添加到serverStatusBody\r\nserverStatusBody.appendChild(buttonsContainer);\r\n\r\n// 添加提示\r\nconst buttonDescription = document.createElement('p');\r\nbuttonDescription.classList.add('input-container');\r\nbuttonDescription.textContent = '提示:命令较多时可能会卡住或者日志未输出,这是正常现象';\r\n\r\n// 添加输入框和执行按钮的容器\r\nconst inputContainer = document.createElement('div');\r\ninputContainer.classList.add('input-container');\r\n\r\nconst inputDescription = document.createElement('p');\r\ninputDescription.textContent = '自定义shell执行';\r\n\r\n// 创建输入框\r\nconst inputBox = document.createElement('input');\r\ninputBox.type = 'text';\r\ninputBox.placeholder = '在这里可以输入自定义sh命令';\r\n\r\n// 创建执行按钮\r\nconst CustonExecuteButton = document.createElement('button');\r\nCustonExecuteButton.textContent = '执行';\r\n\r\n// 将所有元素添加到inputContainer中\r\ninputContainer.appendChild(inputBox);\r\ninputContainer.appendChild(CustonExecuteButton);\r\n\r\n// 将所有元素添加到卡片中\r\nserverStatusBody.appendChild(buttonDescription); // 添加描述\r\nserverStatusBody.appendChild(document.createElement('br')); // 添加换行\r\nserverStatusBody.appendChild(inputDescription); // 添加描述\r\nserverStatusBody.appendChild(inputContainer); // 添加输入框和执行按钮的容器\r\nserverStatusCard.appendChild(serverStatusHeader);\r\nserverStatusCard.appendChild(serverStatusBody);\r\n\r\n// 创建日志信息卡片（类似地）\r\nconst logCard = document.createElement('div');\r\nlogCard.classList.add('card');\r\n\r\nconst logHeader = document.createElement('div');\r\nlogHeader.classList.add('card-header');\r\nlogHeader.textContent = '日志信息';\r\n\r\nconst logBody = document.createElement('div');\r\n\r\n// 创建日志信息的列表项\r\nconst logEntry = document.createElement('pre');\r\nlogEntry.classList.add('log-body');\r\nlogEntry.textContent = '还没有命令执行呢';\r\n\r\n// 创建一个ul元素并将列表项添加到其中\r\nconst logList = document.createElement('ul');\r\nlogList.appendChild(logEntry);\r\n\r\n// 将所有元素添加到日志卡片中\r\nlogBody.appendChild(logList);\r\nlogCard.appendChild(logHeader);\r\nlogCard.appendChild(logBody);\r\n\r\n// 设置默认的工作路径\r\nconst MODDIR = \"/data/adb/modules/better_app_config\";\r\n\r\n// 为按钮添加点击事件监听器\r\nbuttons.forEach((button, index) => {\r\n  button.addEventListener('click', () => {\r\n    // 先给个提醒,防止多次点击\r\n    logEntry.textContent = '执行中';\r\n\r\n    // 使用 setTimeout 来确保 UI 有机会更新\r\n    setTimeout(async () => {\r\n      // 定义要执行的命令和目录(尽量使用完整路径减少错误)\r\n      const commands = [\r\n        'sh ' + MODDIR + '/action.sh',\r\n        'sh ' + MODDIR + '/Hide_My_Applist/get_config.sh',\r\n        'rm -f ' + MODDIR + '/Hide_My_Applist/whitelist.mode;sh ' + MODDIR + '/Hide_My_Applist/get_config.sh',\r\n        'touch ' + MODDIR + '/Hide_My_Applist/whitelist.mode;sh ' + MODDIR + '/Hide_My_Applist/get_config.sh',\r\n        'rm -f ' + MODDIR + '/Hide_My_Applist/reload',\r\n        'touch ' + MODDIR + '/Hide_My_Applist/reload',\r\n        'sh ' + MODDIR + '/Tricky_Store/get_config.sh',\r\n        'rm -f gethash.done;sh ' + MODDIR + '/getboothash.sh',\r\n        'sh ' + MODDIR + '/apks/install.sh'\r\n      ];\r\n      const cwd = MODDIR;\r\n      \r\n      // 调用封装好的异步函数执行命令\r\n      try {\r\n        const result = await executeCommand(commands[index], cwd);\r\n        \r\n        // 将命令执行的结果直接设置到 <pre> 元素中\r\n        logEntry.textContent = result;\r\n        \r\n        // 滚动日志区域到最新内容（如果日志区域有滚动条的话）\r\n        logBody.scrollTop = logBody.scrollHeight;\r\n      } catch (error) {\r\n        console.error('执行命令时发生错误:', error);\r\n        // 可以选择将错误信息设置到 <pre> 元素中\r\n        logEntry.textContent = '执行命令时发生错误: ' + error.message;\r\n      }\r\n    }, 100); // 延迟毫秒，即尽可能快地执行，但仍然允许UI更新\r\n  });\r\n});\r\n\r\nCustonExecuteButton.addEventListener('click', async () => {\r\n  // 定义要执行的命令和目录\r\n  const command = inputBox.value;\r\n  const cwd = MODDIR;\r\n  \r\n  // 调用封装好的异步函数执行命令\r\n  const result = await executeCommand(command, cwd);\r\n  \r\n  // 将命令执行的结果直接设置到 <pre> 元素中\r\n  logEntry.textContent = result;\r\n  \r\n  // 滚动日志区域到最新内容（如果日志区域有滚动条的话）\r\n  logBody.scrollTop = logBody.scrollHeight;\r\n});\r\n\r\n// 最后，将卡片和标题添加到#app容器中\r\nappContainer.appendChild(title);\r\nappContainer.appendChild(serverStatusCard);\r\nappContainer.appendChild(logCard);","let callbackCounter = 0;\nfunction getUniqueCallbackName(prefix) {\n  return `${prefix}_callback_${Date.now()}_${callbackCounter++}`;\n}\n\nexport function exec(command, options) {\n  if (typeof options === \"undefined\") {\n    options = {};\n  }\n\n  return new Promise((resolve, reject) => {\n    // Generate a unique callback function name\n    const callbackFuncName = getUniqueCallbackName(\"exec\");\n\n    // Define the success callback function\n    window[callbackFuncName] = (errno, stdout, stderr) => {\n      resolve({ errno, stdout, stderr });\n      cleanup(callbackFuncName);\n    };\n\n    function cleanup(successName) {\n      delete window[successName];\n    }\n\n    try {\n      ksu.exec(command, JSON.stringify(options), callbackFuncName);\n    } catch (error) {\n      reject(error);\n      cleanup(callbackFuncName);\n    }\n  });\n}\n\nfunction Stdio() {\n    this.listeners = {};\n  }\n  \n  Stdio.prototype.on = function (event, listener) {\n    if (!this.listeners[event]) {\n      this.listeners[event] = [];\n    }\n    this.listeners[event].push(listener);\n  };\n  \n  Stdio.prototype.emit = function (event, ...args) {\n    if (this.listeners[event]) {\n      this.listeners[event].forEach((listener) => listener(...args));\n    }\n  };\n  \n  function ChildProcess() {\n    this.listeners = {};\n    this.stdin = new Stdio();\n    this.stdout = new Stdio();\n    this.stderr = new Stdio();\n  }\n  \n  ChildProcess.prototype.on = function (event, listener) {\n    if (!this.listeners[event]) {\n      this.listeners[event] = [];\n    }\n    this.listeners[event].push(listener);\n  };\n  \n  ChildProcess.prototype.emit = function (event, ...args) {\n    if (this.listeners[event]) {\n      this.listeners[event].forEach((listener) => listener(...args));\n    }\n  };\n  \n  export function spawn(command, args, options) {\n    if (typeof args === \"undefined\") {\n      args = [];\n    } else if (typeof args === \"object\") {\n        // allow for (command, options) signature\n        options = args;\n    }\n    \n    if (typeof options === \"undefined\") {\n      options = {};\n    }\n  \n    const child = new ChildProcess();\n    const childCallbackName = getUniqueCallbackName(\"spawn\");\n    window[childCallbackName] = child;\n  \n    function cleanup(name) {\n      delete window[name];\n    }\n\n    child.on(\"exit\", code => {\n        cleanup(childCallbackName);\n    });\n\n    try {\n      ksu.spawn(\n        command,\n        JSON.stringify(args),\n        JSON.stringify(options),\n        childCallbackName\n      );\n    } catch (error) {\n      child.emit(\"error\", error);\n      cleanup(childCallbackName);\n    }\n    return child;\n  }\n\nexport function fullScreen(isFullScreen) {\n  ksu.fullScreen(isFullScreen);\n}\n\nexport function toast(message) {\n  ksu.toast(message);\n}\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$5tSLu","executeCommand","command","cwd","errno","stdout","stderr","exec","error","message","console","log","toast","fullScreen","appContainer","document","getElementById","title","createElement","textContent","serverStatusCard","classList","add","serverStatusHeader","serverStatusBody","buttonsContainer","buttons","map","text","button","appendChild","buttonDescription","inputContainer","inputDescription","inputBox","type","placeholder","CustonExecuteButton","logCard","logHeader","logBody","logEntry","logList","MODDIR","forEach","index","addEventListener","setTimeout","commands","result","scrollTop","scrollHeight","value","$3fda245dd9a38f2c$export$78e3044358792147","$3fda245dd9a38f2c$export$708e76f13b8a286c","$3fda245dd9a38f2c$export$b410431fab84fa58","$3fda245dd9a38f2c$var$callbackCounter","options","Promise","resolve","reject","callbackFuncName","Date","now","cleanup","successName","window","ksu","JSON","stringify","$3fda245dd9a38f2c$var$Stdio","listeners","$3fda245dd9a38f2c$var$ChildProcess","stdin","isFullScreen","prototype","on","event","listener","push","emit","args"],"version":3,"file":"index.043cf847.js.map"}